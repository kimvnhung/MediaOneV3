/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package DoanhThu;

import Main.HomeFrame;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.text.ParseException;
import java.util.ArrayList;
import java.util.Date;
import java.util.Properties;
import java.util.concurrent.TimeUnit;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

import utils.ChiPhiKhac;
import Others.DateLabelFormatter;
import utils.SanPham;

/**
 *
 * @author h
 */
public class DoanhThuLoiNhuan extends javax.swing.JPanel {

    private ArrayList<ChiPhiKhac> listChiPhi;
    private long fromTime;
    private long toTime;
    
    /**
     * Creates new form DoanhThuLoiNhuan
     */
    public DoanhThuLoiNhuan() throws ParseException, CloneNotSupportedException {
        initComponents();
        
        this.dateChFrom.setDateFormatString(new DateLabelFormatter().getDatePattern());
        this.dateChTo.setDateFormatString(new DateLabelFormatter().getDatePattern());
        
        fromTime = new DateLabelFormatter(HomeFrame.cuaHang.getListHoaDon().get(0).getNgayBan()).getMiliSeconds();
        toTime = new Date().getTime();
        
        setContentPane();
        
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableBangDoanhThu = new javax.swing.JTable();
        lbBangDoanhThu = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableChiPhiPhatSinh = new javax.swing.JTable();
        lbChiPhiPhatSinh = new javax.swing.JLabel();
        lbLoiNhuanTrongThang = new javax.swing.JLabel();
        txtfShowLoiNhuan = new javax.swing.JTextField();
        lbVND2 = new javax.swing.JLabel();
        lbDoanhThuTrongThang = new javax.swing.JLabel();
        txtfShowDoanhThu = new javax.swing.JTextField();
        lbVND1 = new javax.swing.JLabel();
        dateChFrom = new com.toedter.calendar.JDateChooser();
        dateChTo = new com.toedter.calendar.JDateChooser();
        lbTo = new javax.swing.JLabel();

        setPreferredSize(new java.awt.Dimension(800, 500));

        jLabel1.setText("Doanh Thu Và Lợi Nhuận");

        tableBangDoanhThu.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "STT", "Tên Mặt Hàng", "Số Lượng Bán", "Giá Bán", "Doanh Thu", "Giá Mua", "Tồn Kho"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tableBangDoanhThu);

        lbBangDoanhThu.setText("Bảng Doanh Thu");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(lbBangDoanhThu)
                .addGap(348, 348, 348))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(lbBangDoanhThu)
                .addGap(9, 9, 9)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tableChiPhiPhatSinh.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "STT", "Tên Chi Phí", "Số Tiền"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tableChiPhiPhatSinh);

        lbChiPhiPhatSinh.setText("Chi Phí Phát Sinh");

        lbLoiNhuanTrongThang.setText("Lợi Nhuận ");

        txtfShowLoiNhuan.setEditable(false);

        lbVND2.setText("VND");

        lbDoanhThuTrongThang.setText("Doanh Thu");

        txtfShowDoanhThu.setEditable(false);

        lbVND1.setText("VND");

        dateChFrom.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                dateChFromPropertyChange(evt);
            }
        });

        dateChTo.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                dateChToPropertyChange(evt);
            }
        });

        lbTo.setText("đến");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(129, 129, 129)
                        .addComponent(lbChiPhiPhatSinh))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(dateChFrom, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lbTo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(dateChTo, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 9, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbDoanhThuTrongThang)
                            .addComponent(lbLoiNhuanTrongThang))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtfShowDoanhThu, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                            .addComponent(txtfShowLoiNhuan))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(16, 16, 16)
                                .addComponent(lbVND2))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lbVND1)))))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addComponent(lbChiPhiPhatSinh)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 8, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(dateChFrom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dateChTo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbTo))
                .addGap(28, 28, 28)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbDoanhThuTrongThang)
                    .addComponent(txtfShowDoanhThu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbVND1))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbLoiNhuanTrongThang)
                    .addComponent(txtfShowLoiNhuan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbVND2))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(342, 342, 342)
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void dateChFromPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_dateChFromPropertyChange
        // TODO add your handling code here:
        try{
            this.fromTime = this.dateChFrom.getDate().getTime();
            setContentPane();
        }catch(Exception e){
            
        }
    }//GEN-LAST:event_dateChFromPropertyChange

    private void dateChToPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_dateChToPropertyChange
        // TODO add your handling code here:
        try{
            this.toTime = this.dateChTo.getDate().getTime();
            setContentPane();
        }catch(Exception e){
            
        }
    }//GEN-LAST:event_dateChToPropertyChange


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser dateChFrom;
    private com.toedter.calendar.JDateChooser dateChTo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lbBangDoanhThu;
    private javax.swing.JLabel lbChiPhiPhatSinh;
    private javax.swing.JLabel lbDoanhThuTrongThang;
    private javax.swing.JLabel lbLoiNhuanTrongThang;
    private javax.swing.JLabel lbTo;
    private javax.swing.JLabel lbVND1;
    private javax.swing.JLabel lbVND2;
    private javax.swing.JTable tableBangDoanhThu;
    private javax.swing.JTable tableChiPhiPhatSinh;
    private javax.swing.JTextField txtfShowDoanhThu;
    private javax.swing.JTextField txtfShowLoiNhuan;
    // End of variables declaration//GEN-END:variables

    private void setTxtfShowDoanhThu() {
        DefaultTableModel model = (DefaultTableModel) this.tableBangDoanhThu.getModel();
        int size = model.getRowCount();
        
        int totalDoanhThu = 0;
        for(int i = 0; i < size; i++){
            totalDoanhThu += (int)model.getValueAt(i, 4);
        }
        
        txtfShowDoanhThu.setText(""+totalDoanhThu);
    }

    private void setTxfShowLoiNhuan() {
        DefaultTableModel model = (DefaultTableModel) this.tableBangDoanhThu.getModel();
        int size = model.getRowCount();
        
        int totalTonKho = 0;
        for(int i = 0; i < size; i++){
            totalTonKho += ((int)model.getValueAt(i, 5)*(int)model.getValueAt(i, 6));
        }
        
        model = (DefaultTableModel) this.tableChiPhiPhatSinh.getModel();
        size = model.getRowCount();
        
        int totalChiPhi = 0;
        for(int i = 0; i < size; i++){
            totalChiPhi += (int) model.getValueAt(i, 2);
        }   
        
        int doanhThu = Integer.parseInt(txtfShowDoanhThu.getText());
        txtfShowLoiNhuan.setText(""+(doanhThu-(totalTonKho+totalChiPhi)));
    }

    private void setTableDoanhThu(long fromTime, long toTime) throws ParseException, CloneNotSupportedException {
        DefaultTableModel model = (DefaultTableModel) this.tableBangDoanhThu.getModel();
        model.setRowCount(0);
        ArrayList<SanPham> thongKeDoanhThu = HomeFrame.cuaHang.thongKeDoanhThu(fromTime, toTime);
        
        int sizeDiaNhac = HomeFrame.cuaHang.getListDiaNhac().size();
        int sizeDiaPhim = HomeFrame.cuaHang.getListDiaPhim().size();
        int sizeSach = HomeFrame.cuaHang.getListSach().size();
        
        for(int i = 0; i < thongKeDoanhThu.size(); i++){
            int tonKho = 0;
            SanPham para = thongKeDoanhThu.get(i);
            if(i < sizeDiaNhac){
                tonKho = HomeFrame.cuaHang.getListDiaNhac().get(i).getSoLuong();
            }else if(i < sizeDiaPhim+sizeDiaNhac){
                tonKho = HomeFrame.cuaHang.getListDiaPhim().get(i-sizeDiaNhac).getSoLuong();
            }else {
                tonKho = HomeFrame.cuaHang.getListSach().get(i-sizeDiaNhac-sizeDiaPhim).getSoLuong();
            }
            Object[] newRow = {model.getRowCount()+1,para.getTen(),para.getSoLuong(),para.getGiaBan(),
                para.getSoLuong()*para.getGiaBan(),para.getGiaMua(),tonKho
            };
            model.addRow(newRow);
        }
    }

    private void setTableChiPhi(long fromTime, long toTime) {
        DefaultTableModel model = (DefaultTableModel) this.tableChiPhiPhatSinh.getModel();
        model.setRowCount(0);
        ArrayList<ChiPhiKhac> listChiPhi = new ArrayList<>(HomeFrame.cuaHang.getListChiPhiKhac());
        
        Date from = new Date(fromTime);
        Date to = new Date(toTime);
        
        int hour = (int) TimeUnit.HOURS.convert(toTime - fromTime, TimeUnit.MILLISECONDS);
        int day = (int) TimeUnit.DAYS.convert(toTime - fromTime, TimeUnit.MILLISECONDS);
        int month = (to.getYear() - from.getYear())*12+(to.getMonth() - from.getMonth());
        
        Object[] newRow ;
        int soTien = 0;
        for(ChiPhiKhac x:listChiPhi){
            
            switch(x.getTrenDonVi()){
                case "None":
                    soTien = x.getSoTien();
                    break;
                case "Giờ":
                    soTien = x.getSoTien()*hour;
                    break;
                case "Ngày":
                    soTien = x.getSoTien()*day;
                    break;
                default:
                    soTien = x.getSoTien()*month;
                    break;
            }
            newRow = new Object[]{model.getRowCount()+1,x.getTenChiPhi(),soTien};
            model.addRow(newRow);
        }
    }

    private void setContentPane() throws ParseException, CloneNotSupportedException {
        setTableDoanhThu(fromTime,toTime);
        setTableChiPhi(fromTime,toTime);
        setTxtfShowDoanhThu();
        setTxfShowLoiNhuan();
    }
    
    
}
